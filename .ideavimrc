source ~/.intellimacs/spacemacs.vim
source ~/.intellimacs/extra.vim
source ~/.intellimacs/major.vim
source ~/.intellimacs/hybrid.vim

let mapleader = " "
set nu "rnu
set clipboard=unnamedplus
set ignorecase
set smartcase
set hlsearch
set incsearch ""highlight halfway typing
set visualbell
set noerrorbells

nnoremap ym [M+eV]My
nnoremap dm [M+eV]Md
nnoremap vm [M+eV]M

nmap , <leader>m
vmap , <leader>m
nnoremap Y yg_
nmap gR gr$
nnoremap y_ y^
nnoremap d_ d^
nnoremap c_ c^
nnoremap <leader>. @:
nnoremap <leader>sc :nohl<CR>
nnoremap <Leader>sr :%s///gcI<left><left><left><left><left>
vnoremap sr y:%s///gcI<left><left><left><left><left><C-r>0<right>
vnoremap ss y/<C-r>0<CR>

set surround
set commentary
set easymotion
set multiple-cursors "<A-n>, <A-x>, <A-p>, g<A-n>
set NERDTree
set textobj-indent "set vim-indent-object is not working
set textobj-entire
set argtextobj
set ReplaceWithRegister
set highlightedyank
set exchange
set matchit



nmap s <Plug>(easymotion-s2)
nmap S <Plug>(easymotion-sl2)
"map <Leader> <Plug>(easymotion-prefix) "-> only one <Leader>, instead of <Leader><Leader>

set ideajoin
set idearefactormode=keep
" set clipboard+=ideaput

nnoremap <leader><enter> :action ShowBookmarks<CR>
nnoremap <leader>bm :action ToggleBookmark<CR>

nnoremap <Leader>, :action RecentFiles<CR>
vnoremap <Leader>, :action RecentFiles<CR>

nnoremap <leader>bs :action NewScratchFile<CR>
vnoremap <leader>bs :action NewScratchFile<CR>
nnoremap <leader>bc :action Scratch.ChangeLanguage<CR>
vnoremap <leader>bc :action Scratch.ChangeLanguage<CR>

nnoremap <leader>bl    <C-S-6>

nnoremap <leader>cf :action ReformatCode<CR>

nnoremap <leader>co :action OptimizeImports<CR>

nnoremap <leader>cc :action SilentCodeCleanup<CR>:action ReformatCode<CR>:action OptimizeImports<CR>

nnoremap <Leader>dd :action ActivateDatabaseToolWindow<CR>

nnoremap <leader>mds    :action ChooseDebugConfiguration<CR>
nnoremap <leader>mdi    :action StepInto<CR>
nnoremap <leader>mdd    :action DebugClass<CR>
nnoremap <leader>mdl    :action Debug<CR>

nnoremap ]e :action GotoNextError<CR>
nnoremap [e :action GotoPreviousError<CR>

nnoremap <leader><leader> :action GotoFile<CR>
nnoremap <leader>fo :action OpenFile<CR>
nnoremap <leader>fC :action CopyElement<CR>

nnoremap <Leader>gg :action ActivateCommitToolWindow<CR>
nnoremap <leader>go :action Vcs.QuickListPopupAction<CR>
nnoremap <leader>gF :action Vcs.UpdateProject<CR>
nnoremap <leader>ga :action Annotate<CR>
nnoremap <leader>gl :action Vcs.Show.Log<CR>
unmap <leader>gs
nnoremap <leader>gss :action Git.Stash<CR>
nnoremap <leader>gsu :action Git.Unstash<CR>
nnoremap <leader>gr :action Vcs.RollbackChangedLines<CR>
;unmap <leader>gf
;nnoremap <leader>gf :action Git.Fetch<CR>
;nnoremap <leader>gf :action Vcs.ShowTabbedFileHistory<CR>

nnoremap gi :action GotoImplementation<CR>
nnoremap gs :action GotoSuperMethod<CR>
nnoremap gtt :action GotoTest<CR>
vnoremap gtt :action GotoTest<CR>
nnoremap gD :action FindUsages<CR>
vnoremap gD :action FindUsages<CR>
nnoremap gtd :action GotoTypeDeclaration<CR>
vnoremap gtd :action GotoTypeDeclaration<CR>
nnoremap g=    <C-a>
nnoremap g-    <C-x>
# Goto "Header"
map gh gg<Action>(MethodDown)z<CR>5<C-y>

nnoremap <Leader>Gg :action ActivateGradleToolWindow<CR>
nnoremap <Leader>Gr :action ExternalSystem.ProjectRefreshAction<CR>

nnoremap <Leader>hc :action CallHierarchy<CR>

nnoremap <leader>is    :action InsertLiveTemplate<CR>a
vnoremap <leader>is    <esc>:action insertlivetemplate<cr>a

nnoremap <Leader>mm :action MainMenu<CR>

nnoremap <leader>hrr    :source ~/.ideavimrc<CR>

nnoremap <leader>jd :action SelectInProjectView<CR>

nnoremap <leader>nc    :action CloseAllNotifications<CR>

"noremap <Leader>in :action Inline<CR>
nnoremap <leader>mrin    :action Inline<CR>
vnoremap <leader>mrin    <Esc>:action Inline<CR>

"noremap <Leader>ev :action IntroduceVariable<CR>
nnoremap <leader>mrev    :action IntroduceVariable<CR>
vnoremap <leader>mrev    <Esc>:action IntroduceVariable<CR>

"noremap <Leader>ep :action IntroduceParameter<CR>
nnoremap <leader>mrep    :action IntroduceParameter<CR>
vnoremap <leader>mrep    <Esc>:action IntroduceParameter<CR>

"noremap <Leader>ec :action IntroduceConstant<CR>
nnoremap <leader>mrec    :action IntroduceConstant<CR>
vnoremap <leader>mrec    <Esc>:action IntroduceConstant<CR>

"noremap <Leader>ef :action IntroduceField<CR>
nnoremap <leader>mref    :action IntroduceField<CR>
vnoremap <leader>mref    <Esc>:action IntroduceField<CR>

"noremap <Leader>em :action ExtractMethod<CR>

nnoremap <C-,> :action ShowSettings<CR>

nnoremap <C-j> :action MethodDown<CR>
nnoremap <C-k> :action MethodUp<CR>
nnoremap <A-j> :action MoveLineDown<CR>
nnoremap <A-k> :action MoveLineUp<CR>

nnoremap <A-S-j> :action MoveStatementDown<CR>
nnoremap <A-S-k> :action MoveStatementUp<CR>

nnoremap <A-h> :action MoveElementLeft<CR>
nnoremap <A-l> :action MoveElementRight<CR>

" Not working :-(
"nnoremap <C-n> :action NextDiff<CR>
"nnoremap <C-p> :action PreviousDiff<CR>
"Complete current Statement
"nnoremap <S- > :action EditorCompleteStatement<CR>

nnoremap <Leader>rr :action RunClass<CR>
nnoremap <Leader>ru :action RunClass<CR>
nnoremap <Leader>rl :action Rerun<CR>
nnoremap <Leader>rc :action RunCoverage<CR>
nnoremap <leader>rk :action Stop<CR>
nnoremap <leader>rs :action ChooseRunConfiguration<CR>

nnoremap <leader>* viw:action FindInPath<CR>

nnoremap <leader>/    :action FindInPath<CR>

nnoremap <leader>ot    :action ActivateTerminalToolWindow<CR>
nnoremap <leader>oe    :action ActivateTerminalToolWindow<CR>

nnoremap <Leader>wm <C-W>o:action HideAllWindows<CR>

" ParameterInfo

" include emacs hotkeys like C-a ?  some examples -> https://khin.io/post/spacemacs-like-binding-for-idea-products/"

"<leader>mh...
"TypeHierarchyBase.BaseOnThisType
"MethodHierarchy.BaseOnThisMethod
"MethodHierarchy
"CallHierarchy.BaseOnThisMethod

"better vim camel case ]b ]w [b [w (SPC x i)


" sourround/insert with livetemplate

" jumb to next "Element". Example-> return findReference(seaShip, this::isKnExportReference, KnExportReference::knExportReference);
" C-S-h/l change method private -> public -> ...
" C-S-j/k change variable/method final/..(?)
" change C-A j/k to A j/k
" correct copy, yank, delte methode"

" vim smooth scorlling"
"introduceFunctionalVariable

" ### DISABLED #####
"nnoremap <Leader>rr :action Rerun<CR>
"nnoremap <Leader>fs :action FileStructurePopup<CR>
"nnoremap <Leader>rn :action RenameElement<CR>
"nnoremap <Leader>se :action ShowErrorDescription<CR>
"nnoremap <Leader>sb :action ToggleLineBreakpoint<CR>
"nnoremap <Leader>ne :action GotoNextError<CR>
"nnoremap <Leader>pe :action GotoPreviousError<CR>

"nnoremap <C-W>n :action ViewNavigationBar<CR>

"nnoremap <C-j> :action ChooseNextSubsequentPropertyValueEditorAction<CR>
"vnoremap <C-j> :action ChooseNextSubsequentPropertyValueEditorAction<CR>
"nnoremap <C-k> :action ChoosePrevSubsequentPropertyValueEditorAction<CR>
"vnoremap <C-k> :action ChoosePrevSubsequentPropertyValueEditorAction<CR>

"vnoremap <leader>y "+y
"nnoremap <leader>Y "+yg_
"nnoremap <leader>y "+y
"nnoremap <leader>yy "+yy
"nnoremap <leader>p "+p
"nnoremap <leader>P "+P
"noremap <leader>p "+p
"noremap <leader>P "+P
"nnoremap <leader>af :action EditorSelectWord<CR>
"vnoremap aa :action GuiDesigner.ExpandSelection<CR>
"vnoremap ab :action SmartSelect<CR>
"vnoremap ac :action TableResult.GrowSelection<CR>

"nnoremap <leader>af :action EditorSelectWord<CR>
"vnoremap aa :action GuiDesigner.ExpandSelection<CR>
"vnoremap ab :action SmartSelect<CR>
"vnoremap ac :action TableResult.GrowSelection<CR>
